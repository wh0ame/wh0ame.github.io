{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ivan\\\\Desktop\\\\Deplom-master \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\src\\\\layouts\\\\Database.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Database() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Добавление данных\n  async function addData() {\n    const {\n      data,\n      error\n    } = await supabase.from('apartments').insert([{\n      title: 'New Apartment',\n      price: 100000\n    }]);\n    if (error) console.error('Error adding data:', error);else fetchData(); // Обновляем список\n  }\n\n  // Обновление данных\n  async function updateData(id) {\n    const {\n      error\n    } = await supabase.from('apartments').update({\n      price: 120000\n    }).eq('id', id);\n    if (error) console.error('Error updating data:', error);else fetchData();\n  }\n\n  // Удаление данных\n  async function deleteData(id) {\n    const {\n      error\n    } = await supabase.from('apartments').delete().eq('id', id);\n    if (error) console.error('Error deleting data:', error);else fetchData();\n  }\n  async function fetchData() {\n    try {\n      setLoading(true);\n      const {\n        data,\n        error\n      } = await supabase.from('your_table_name').select('*');\n      if (error) throw error;\n      if (data) setData(data);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Database, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = Database;\nexport default Database;\nvar _c;\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","Database","_s","data","setData","loading","setLoading","fetchData","addData","error","from","insert","title","price","console","updateData","id","update","eq","deleteData","delete","select","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Ivan/Desktop/Deplom-master — копия/src/layouts/Database.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nfunction Database() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Добавление данных\r\nasync function addData() {\r\n  const { data, error } = await supabase\r\n    .from('apartments')\r\n    .insert([{ title: 'New Apartment', price: 100000 }]);\r\n  \r\n  if (error) console.error('Error adding data:', error);\r\n  else fetchData(); // Обновляем список\r\n}\r\n\r\n// Обновление данных\r\nasync function updateData(id) {\r\n  const { error } = await supabase\r\n    .from('apartments')\r\n    .update({ price: 120000 })\r\n    .eq('id', id);\r\n  \r\n  if (error) console.error('Error updating data:', error);\r\n  else fetchData();\r\n}\r\n\r\n// Удаление данных\r\nasync function deleteData(id) {\r\n  const { error } = await supabase\r\n    .from('apartments')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) console.error('Error deleting data:', error);\r\n  else fetchData();\r\n} \r\n\r\n  async function fetchData() {\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('your_table_name')\r\n        .select('*');\r\n      \r\n      if (error) throw error;\r\n      if (data) setData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <li key={item.id}>{JSON.stringify(item)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Database;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}