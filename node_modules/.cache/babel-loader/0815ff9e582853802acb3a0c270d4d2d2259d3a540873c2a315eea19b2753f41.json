{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'../supabaseClient';import{jsx as _jsx}from\"react/jsx-runtime\";function Database(){const[data,setData]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{fetchData();},[]);// Добавление данных\nasync function addData(){const{data,error}=await supabase.from('apartments').insert([{title:'New Apartment',price:100000}]);if(error)console.error('Error adding data:',error);else fetchData();// Обновляем список\n}// Обновление данных\nasync function updateData(id){const{error}=await supabase.from('apartments').update({price:120000}).eq('id',id);if(error)console.error('Error updating data:',error);else fetchData();}// Удаление данных\nasync function deleteData(id){const{error}=await supabase.from('apartments').delete().eq('id',id);if(error)console.error('Error deleting data:',error);else fetchData();}async function fetchData(){try{setLoading(true);const{data,error}=await supabase.from('your_table_name').select('*');if(error)throw error;if(data)setData(data);}catch(error){console.error('Error fetching data:',error.message);}finally{setLoading(false);}}if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:data.map(item=>/*#__PURE__*/_jsx(\"li\",{children:JSON.stringify(item)},item.id))})});}export default Database;","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","Database","data","setData","loading","setLoading","fetchData","addData","error","from","insert","title","price","console","updateData","id","update","eq","deleteData","delete","select","message","children","map","item","JSON","stringify"],"sources":["C:/Users/Ivan/Desktop/Deplom-master — копия/src/layouts/Database.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nfunction Database() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Добавление данных\r\nasync function addData() {\r\n  const { data, error } = await supabase\r\n    .from('apartments')\r\n    .insert([{ title: 'New Apartment', price: 100000 }]);\r\n  \r\n  if (error) console.error('Error adding data:', error);\r\n  else fetchData(); // Обновляем список\r\n}\r\n\r\n// Обновление данных\r\nasync function updateData(id) {\r\n  const { error } = await supabase\r\n    .from('apartments')\r\n    .update({ price: 120000 })\r\n    .eq('id', id);\r\n  \r\n  if (error) console.error('Error updating data:', error);\r\n  else fetchData();\r\n}\r\n\r\n// Удаление данных\r\nasync function deleteData(id) {\r\n  const { error } = await supabase\r\n    .from('apartments')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) console.error('Error deleting data:', error);\r\n  else fetchData();\r\n} \r\n\r\n  async function fetchData() {\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('your_table_name')\r\n        .select('*');\r\n      \r\n      if (error) throw error;\r\n      if (data) setData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <li key={item.id}>{JSON.stringify(item)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Database;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACdS,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN;AACF,cAAe,CAAAC,OAAOA,CAAA,CAAG,CACvB,KAAM,CAAEL,IAAI,CAAEM,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CACnCW,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,CAAC,CAAC,CAAEC,KAAK,CAAE,eAAe,CAAEC,KAAK,CAAE,MAAO,CAAC,CAAC,CAAC,CAEtD,GAAIJ,KAAK,CAAEK,OAAO,CAACL,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAAC,IACjD,CAAAF,SAAS,CAAC,CAAC,CAAE;AACpB,CAEA;AACA,cAAe,CAAAQ,UAAUA,CAACC,EAAE,CAAE,CAC5B,KAAM,CAAEP,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAC7BW,IAAI,CAAC,YAAY,CAAC,CAClBO,MAAM,CAAC,CAAEJ,KAAK,CAAE,MAAO,CAAC,CAAC,CACzBK,EAAE,CAAC,IAAI,CAAEF,EAAE,CAAC,CAEf,GAAIP,KAAK,CAAEK,OAAO,CAACL,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,IACnD,CAAAF,SAAS,CAAC,CAAC,CAClB,CAEA;AACA,cAAe,CAAAY,UAAUA,CAACH,EAAE,CAAE,CAC5B,KAAM,CAAEP,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAC7BW,IAAI,CAAC,YAAY,CAAC,CAClBU,MAAM,CAAC,CAAC,CACRF,EAAE,CAAC,IAAI,CAAEF,EAAE,CAAC,CAEf,GAAIP,KAAK,CAAEK,OAAO,CAACL,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,IACnD,CAAAF,SAAS,CAAC,CAAC,CAClB,CAEE,cAAe,CAAAA,SAASA,CAAA,CAAG,CACzB,GAAI,CACFD,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAEH,IAAI,CAAEM,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CACnCW,IAAI,CAAC,iBAAiB,CAAC,CACvBW,MAAM,CAAC,GAAG,CAAC,CAEd,GAAIZ,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,GAAIN,IAAI,CAAEC,OAAO,CAACD,IAAI,CAAC,CACzB,CAAE,MAAOM,KAAK,CAAE,CACdK,OAAO,CAACL,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAACa,OAAO,CAAC,CACtD,CAAC,OAAS,CACRhB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAEA,GAAID,OAAO,CAAE,mBAAOJ,IAAA,QAAAsB,QAAA,CAAK,YAAU,CAAK,CAAC,CAEzC,mBACEtB,IAAA,QAAAsB,QAAA,cACEtB,IAAA,OAAAsB,QAAA,CACGpB,IAAI,CAACqB,GAAG,CAAEC,IAAI,eACbxB,IAAA,OAAAsB,QAAA,CAAmBG,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,EAA9BA,IAAI,CAACT,EAA8B,CAC7C,CAAC,CACA,CAAC,CACF,CAAC,CAEV,CAEA,cAAe,CAAAd,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}